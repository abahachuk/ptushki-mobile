// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login screen renders correctly 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "space-between",
      "paddingLeft": 20,
      "paddingRight": 20,
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
            "paddingTop": 20,
          }
        }
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={null}
        >
          <Image
            source="\\"ic_info.png\\""
            style={
              Object {
                "height": 22,
                "width": 22,
              }
            }
          />
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 10,
            "paddingTop": 10,
          }
        }
      >
        <Image
          resizeMode="contain"
          source="\\"logo.png\\""
          style={
            Object {
              "alignSelf": "center",
              "height": 104,
              "width": 186,
            }
          }
        />
        <Text
          style={
            Object {
              "color": "#546e7a",
              "fontFamily": "Roboto",
              "fontSize": 14,
              "fontWeight": "400",
              "letterSpacing": 0.1,
              "lineHeight": 18,
              "paddingBottom": 15,
              "paddingTop": 15,
              "textAlign": "center",
            }
          }
        >
          [missing "en.login.bandingCenter" translation]
        </Text>
      </View>
    </View>
    <View
      style={Object {}}
    >
      <View
        style={Array []}
      >
        <View
          style={
            Array [
              Array [
                Object {
                  "borderColor": "#000000",
                  "borderRadius": 4,
                  "borderWidth": 0.5,
                  "height": 56,
                  "paddingLeft": 15,
                  "position": "relative",
                  "width": "100%",
                },
              ],
              undefined,
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "rgba(0,0,0,0.6)",
                  "fontFamily": "Roboto",
                  "fontSize": 16,
                  "left": 15,
                  "letterSpacing": 0.15,
                  "lineHeight": 24,
                  "position": "absolute",
                  "top": 15,
                },
              ]
            }
          >
            [missing "en.login.email" translation]
          </Text>
          <TextInput
            allowFontScaling={true}
            blurOnSubmit={true}
            maxLength={100}
            onBlur={[Function]}
            onChangeText={[Function]}
            onFocus={[Function]}
            onTextInputBlur={[Function]}
            rejectResponderTermination={true}
            style={
              Array [
                Object {
                  "color": "rgba(0,0,0,0.6)",
                  "fontSize": 16,
                },
                undefined,
              ]
            }
            textContentType="emailAddress"
            underlineColorAndroid="transparent"
            value=""
            wrapperStyles={Array []}
          />
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "marginTop": 15,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Array [
                Object {
                  "borderColor": "#000000",
                  "borderRadius": 4,
                  "borderWidth": 0.5,
                  "height": 56,
                  "paddingLeft": 15,
                  "position": "relative",
                  "width": "100%",
                },
              ],
              undefined,
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "rgba(0,0,0,0.6)",
                  "fontFamily": "Roboto",
                  "fontSize": 16,
                  "left": 15,
                  "letterSpacing": 0.15,
                  "lineHeight": 24,
                  "position": "absolute",
                  "top": 15,
                },
              ]
            }
          >
            [missing "en.login.password" translation]
          </Text>
          <TextInput
            allowFontScaling={true}
            blurOnSubmit={true}
            maxLength={100}
            onBlur={[Function]}
            onChangeText={[Function]}
            onFocus={[Function]}
            onTextInputBlur={[Function]}
            rejectResponderTermination={true}
            secureTextEntry={true}
            style={
              Array [
                Object {
                  "color": "rgba(0,0,0,0.6)",
                  "fontSize": 16,
                },
                undefined,
              ]
            }
            textContentType="password"
            underlineColorAndroid="transparent"
            value=""
            wrapperStyles={
              Array [
                Object {
                  "marginTop": 15,
                },
              ]
            }
          />
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "position": "absolute",
                  "right": 15,
                  "top": 15,
                },
              ]
            }
          >
            <Image
              source="\\"ic_eye_show.png\\""
              style={
                Array [
                  Object {
                    "height": 24,
                    "width": 24,
                  },
                ]
              }
            />
          </View>
        </View>
      </View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#546e7a",
            "borderRadius": 4,
            "height": 36,
            "marginTop": 20,
            "opacity": 1,
            "width": "100%",
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#546e7a",
                "fontFamily": "Roboto",
                "fontSize": 14,
                "fontWeight": "500",
                "letterSpacing": 1.25,
                "lineHeight": 16,
                "paddingTop": 10,
                "textAlign": "center",
                "textTransform": "uppercase",
              },
              Array [],
              Object {
                "color": "#ffffff",
              },
            ]
          }
        >
          [missing "en.login.sign-in" translation]
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#546e7a",
          "borderRadius": 4,
          "borderWidth": 1,
          "height": 36,
          "opacity": 1,
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#546e7a",
              "fontFamily": "Roboto",
              "fontSize": 14,
              "fontWeight": "500",
              "letterSpacing": 1.25,
              "lineHeight": 16,
              "paddingTop": 10,
              "textAlign": "center",
              "textTransform": "uppercase",
            },
            Array [],
            undefined,
          ]
        }
      >
        [missing "en.login.sign-up" translation]
      </Text>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderRadius": 4,
          "height": 36,
          "marginBottom": 10,
          "marginTop": 10,
          "opacity": 1,
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#546e7a",
              "fontFamily": "Roboto",
              "fontSize": 14,
              "fontWeight": "500",
              "letterSpacing": 1.25,
              "lineHeight": 16,
              "paddingTop": 10,
              "textAlign": "center",
              "textTransform": "uppercase",
            },
            Array [],
            undefined,
          ]
        }
      >
        [missing "en.login.forgotPassword" translation]
      </Text>
    </View>
  </View>
  <View />
</View>
`;
